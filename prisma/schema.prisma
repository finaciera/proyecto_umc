// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Autos {
  id        String   @id @default(uuid())
  niv       String
  userId    String
  marca       String @db.Text
  submarca    String @db.Text
  model       String @db.Text
  tipo String @db.Text
  placas String @db.Text
  emplacado_estado String @db.Text
  color String @db.Text
  transmision String @db.Text
  combustible String @db.Text
  traccion String @db.Text
  gps String @db.Text
  vestiduras String @db.Text
  imagen String @db.Text
  cilindraje String @db.Text
  kilometraje String @db.Text
  ubicacion String @db.Text
  precio String @db.Text
  publicado Boolean?
  apartado Boolean?
  situacion String @db.Text

  cotizacion Cotiza[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cotiza {
  id String @id @default(uuid())

  autoId String @db.Text
  niv String @db.Text
  userId String @db.Text
  plazos Int
  ordenFecha DateTime @default(now())
  hora_cita DateTime @default(now())
  cotizacion String
  status String @db.Text
  precio_interes String @db.Text  

  auto Autos @relation(fields: [autoId], references: [id], onDelete: Cascade)
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

  @@index([autoId])
  @@index([userId])
}

